<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
			    http://www.springframework.org/schema/beans/spring-beans.xsd
			    http://www.springframework.org/schema/context
			    http://www.springframework.org/schema/context/spring-context.xsd
			    http://www.springframework.org/schema/aop
			    http://www.springframework.org/schema/aop/spring-aop.xsd
			    http://www.springframework.org/schema/tx
			    http://www.springframework.org/schema/tx/spring-tx.xsd
			    http://www.springframework.org/schema/mvc
			    http://www.springframework.org/schema/mvc/spring-mvc.xsd">
    <!-- dao层配置文件开始 -->
    <!-- 配置数据连接池 -->
    <bean id="druidDataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://localhost:3306/chr16_exercise"/>
        <property name="username" value="root"/>
        <property name="password" value="123456"/>
    </bean>
    <!-- 配置生产sqlSession对象的工厂 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="druidDataSource"/>
        <!-- 扫描pojo包，给包下的所有pojo对象起别名-->
        <property name="typeAliasesPackage" value="com.zlx.domain"/>
    </bean>
    <!--扫描接口包路径，生成包下所有的接口的代理对象,并且放入spring容器中-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.zlx.dao"/>
    </bean>
    <!-- dao层配置文件结束-->

    <!-- Service层配置开始 -->

    <!-- 组件扫描配置 -->
    <context:component-scan base-package="com.zlx.service"/>

    <!-- aop面向切面编程:切面是切入点和通知的结合 -->
    <!-- 配置事务管理器DataSourceTransactionManager -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="druidDataSource"/>
    </bean>

    <!-- 配置事务的通知 -->
    <tx:advice id="advice">
        <tx:attributes>
            <!-- 保存方法需要走事务 -->
            <tx:method name="save*" propagation="REQUIRED"/>
            <!-- 删除方法需要走事务 -->
            <tx:method name="delete*" propagation="REQUIRED"/>
            <!-- 跟新方法需要走事务 -->
            <tx:method name="update*" propagation="REQUIRED"/>
            <!-- 查询方法仅仅需要设置为只读-->
            <tx:method name="find*" read-only="true"/>
            <tx:method name="*" propagation="REQUIRED"/>
        </tx:attributes>
    </tx:advice>

    <!-- 配置切面:切入点和通知的结合-->
    <aop:config>
        <!-- 切入点表达式 -->
        <aop:pointcut id="pointcut1" expression="execution(* com.zlx.service.impl.*.*(..))"/>
        <!-- 通知 -->
        <aop:advisor advice-ref="advice" pointcut-ref="pointcut1"/>
    </aop:config>

    <!-- Service层配置结束 -->
</beans>